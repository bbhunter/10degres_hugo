<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>password on 10degres</title>
    <link>https://10degres.net/tags/password/</link>
    <description>Recent content in password on 10degres</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Sep 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://10degres.net/tags/password/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub search</title>
      <link>https://10degres.net/github-search/</link>
      <pubDate>Tue, 06 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/github-search/</guid>
      <description>&lt;p&gt;We all know the famous quote &amp;ldquo;&lt;em&gt;Think out of the box&lt;/em&gt;&amp;rdquo;.
Technical knowledge is important but creativity is also.
In bug bounty, to get nice rewards, sometimes you don&amp;rsquo;t need to be a crazy coder or great network engineer, you simply need to try what other didn&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;This year, Slack get in trouble because many developers leave their credentials in their public repository.
Last year Uber had to deal with a major security issue: database keys were stored in GitHub (this leads to a sweet bounty for the finder).&lt;/p&gt;
&lt;p&gt;I found an interesting project, on GitHub itself, to parse the search engine results: &lt;a href=&#34;https://github.com/melvinsh/vcsmap&#34;&gt;vcsmap from Melvinsh&lt;/a&gt;.
Unfortunately the scrapper seems to have trouble with search that required authentication.
Since I don&amp;rsquo;t understand Ruby, I wrote my own tool with PHP.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Choose your password</title>
      <link>https://10degres.net/choose-your-password/</link>
      <pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/choose-your-password/</guid>
      <description>&lt;p&gt;I recently worked with a well known web agency in France.
They have a good reputation, they were rewarded last year for their good works and they are in the top 40 of the best french agencies. &lt;/p&gt;
&lt;p&gt;However I was terribly surprised to find many basic errors/misconfiguration on their own site: error_reporting enable, 
SQL injection and finally a &amp;ldquo;private&amp;rdquo; admin section reachable with a simple couple of &lt;code&gt;demo&lt;/code&gt;/&lt;code&gt;demo&lt;/code&gt; as credentials&amp;hellip;&lt;/p&gt;
&lt;p&gt;Such vulnerability can be dangerous when using common login/password and it can be even deadly if the discovered user has high privileges.
It was true in this situation: mail contact, articles, resumes, photos everything was alterable.&lt;/p&gt;
&lt;p&gt;Below the good practice to create a strong password.&lt;/p&gt;
&lt;h2 id=&#34;the-rules&#34;&gt;The rules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;must be at least 8 characters&lt;/li&gt;
&lt;li&gt;must be different than your previous password&lt;/li&gt;
&lt;li&gt;must NOT be related to your username&lt;/li&gt;
&lt;li&gt;must NOT contain any recognizable word&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
