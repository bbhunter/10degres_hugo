<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>null byte on 10degres</title>
    <link>http://10degres.net/tags/null-byte/</link>
    <description>Recent content in null byte on 10degres</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Jan 2015 00:00:00 +0000</lastBuildDate><atom:link href="http://10degres.net/tags/null-byte/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Null Byte Injection</title>
      <link>http://10degres.net/null-byte-injection/</link>
      <pubDate>Sat, 10 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://10degres.net/null-byte-injection/</guid>
      <description>&lt;p&gt;I recently read a nice article on &lt;a href=&#34;http://resources.infosecinstitute.com/null-byte-injection-php/&#34; title=&#34;Null byte injection&#34;&gt;InfoSec Institute&lt;/a&gt;
(again) about Null byte injection.
However I met some problems to make it works in a real situation so I decided to write my own.&lt;/p&gt;
&lt;p&gt;First of all, this vulnerability has been &lt;strong&gt;fully patched in PHP 5.3.4&lt;/strong&gt; (until someone else find another buggy function&amp;hellip;), that means you need to install an old version of PHP.
Grab it in &lt;a href=&#34;http://php.net/releases/&#34; title=&#34;PHP releases&#34;&gt;PHP releases archive&lt;/a&gt;.
After compiled and configured, it&amp;rsquo;s very important to set &lt;strong&gt;magic_quotes_gpc=Off&lt;/strong&gt; in the &lt;code&gt;php.ini&lt;/code&gt; (it won&amp;rsquo;t work with &lt;code&gt;ini_set&lt;/code&gt; in the script itself).&lt;/p&gt;
&lt;p&gt;Then imagine an &lt;code&gt;index.php&lt;/code&gt; like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;include&lt;/span&gt;( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/var/www/pages/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;$_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.php&amp;#39;&lt;/span&gt; );
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And a &lt;code&gt;/pages/store.php&lt;/code&gt; like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;This is the store !&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you call it directly it will works but in that case &lt;code&gt;index.php&lt;/code&gt; is usually used to display common stuffs like header and footer.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
