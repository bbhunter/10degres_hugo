<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>training on 10degres</title>
    <link>https://10degres.net/tags/training/</link>
    <description>Recent content in training on 10degres</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://10degres.net/tags/training/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An extremely buggy web app !</title>
      <link>https://10degres.net/an-extremely-buggy-web-app/</link>
      <pubDate>Thu, 28 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/an-extremely-buggy-web-app/</guid>
      <description>&lt;p&gt;&lt;strong&gt;bWAPP&lt;/strong&gt; is a PHP web application which is intentionnally crackable. It covers a very large set of common vulns but also some unusual case you can meet on the Internet.&lt;/p&gt;
&lt;p&gt;The goal here is to train your development skill and hacking knowledge to be able to write a better (more secure) code.
Compared to &lt;a href=&#34;https://10degres.net/damn-vulnerable-web-application/&#34;&gt;DVWA&lt;/a&gt;, you have to consider bWAPP as a much more advanced level of difficulty.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://10degres.net/images/bwapp.png&#34; alt=&#34;bwapp&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Offensive Security Certified Professional</title>
      <link>https://10degres.net/offensive-security-certified-professional/</link>
      <pubDate>Tue, 08 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/offensive-security-certified-professional/</guid>
      <description>&lt;p&gt;The famous Offensive Security Certified Professional aka &lt;a href=&#34;https://www.offensive-security.com/information-security-certifications/oscp-offensive-security-certified-professional/&#34;&gt;OSCP&lt;/a&gt;
is the certification of the Penetration Testing with Kali Linux course aka &lt;a href=&#34;https://www.offensive-security.com/information-security-training/penetration-testing-training-kali-linux/&#34;&gt;PWK&lt;/a&gt; 
provided by Offensive Security.&lt;/p&gt;
&lt;h2 id=&#34;offensive-security&#34;&gt;Offensive Security&lt;/h2&gt;
&lt;p&gt;Offensive Security is one the most active organization on the Internet about offsec.
In addition to providing pentest and attack simulation services to their customers, they also bring a lot of great solution to the community.&lt;/p&gt;
&lt;p&gt;Currently 6 online/live/in-house courses are available (pentest, wireless security, windows exploiation, web attacks&amp;hellip;) who go with 5 different well known certifications.
An incredible online virtual lab composed of intentionally vulnerable machine (ubuntu, XP, webapps, mail service, ftp vulns and so on&amp;hellip;) has been created to enhance you security knowledge. Offensive Security is also editor of awesome projects such as Kali Linux, Metasploit and Google Hacking Database, the most used tools by pentesters.&lt;/p&gt;
&lt;p&gt;The quality of all of these solutions is well recognized by the community and many companies and actually everyone who have to deals with offsec :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/offsectraining&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vimeo.com/offsec&#34;&gt;Vimeo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=VwtOjFtWiRc&#34;&gt;Offsec Jam&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Hacker Test 1-10</title>
      <link>https://10degres.net/hacker-test-1-10/</link>
      <pubDate>Thu, 05 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/hacker-test-1-10/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.hackertest.net/&#34; title=&#34;Hacker Test&#34;&gt;Hacker Test&lt;/a&gt; is an online hacker simulation.
20 levels to test your PHP, HTML and Javascript knowledge.
Below the solution of the first ten.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hackers solve problems and build things, and they believe in freedom and voluntary mutual help.
To be accepted as a hacker, you have to behave as though you have this kind of attitude yourself.
And to behave as though you have the attitude, you have to really believe the attitude.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;level-1&#34;&gt;Level 1&lt;/h2&gt;
&lt;p&gt;In the source code we can see the following JavaScript lines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;null&amp;#34;&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check&lt;/span&gt;()
{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (document.&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;) {
    document.&lt;span style=&#34;color:#a6e22e&#34;&gt;location&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.hackertest.net/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;document.&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.htm&amp;#34;&lt;/span&gt;;
  } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Try again&amp;#34;&lt;/span&gt;);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The value of the password input named &lt;code&gt;c&lt;/code&gt; is compared with the variable &lt;code&gt;a&lt;/code&gt;, which has a &lt;code&gt;null&lt;/code&gt; value. This is the password: &lt;code&gt;null&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exploit Exercices, Nebula &amp;ndash; level03</title>
      <link>https://10degres.net/exploit-exercices-nebula-ndash-level03/</link>
      <pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/exploit-exercices-nebula-ndash-level03/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Check the home directory of flag03 and take note of the files there.
There is a crontab that is called every couple of minutes.
Files for this level can be found in /home/flag03.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First, let&amp;rsquo;s check the home directory of our target &lt;code&gt;flag03&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://10degres.net/images/exploit_exercices_nebula_level03_1.png&#34; alt=&#34;Exploit Exercises Nebula Level03&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ok we have an empty directory with full access and a shell script who looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in /home/flag03/writable.d/* ; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ulimit -t 5; bash -x &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  rm -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$i&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>DVWA - XSS reflected</title>
      <link>https://10degres.net/dvwa-xss-reflected/</link>
      <pubDate>Tue, 20 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/dvwa-xss-reflected/</guid>
      <description>&lt;p&gt;According to OWASP Top 10, Cross-Site Scripting aka XSS takes the 3rd place in the more common and important web vulnerabilities list.
Her primary goal is to spoof the session of another user by stealing his cookie id, usually a privileged user like an admin. 
You can train XSS in Damn Vulnerable Web Application, here are some tests you can perform.&lt;/p&gt;
&lt;h2 id=&#34;low&#34;&gt;Low&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;array_key_exists&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;, $_GET) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; $_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; $_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; ) {  
  $isempty &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;  
} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {  
  $html &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;pre&amp;gt;&amp;#39;&lt;/span&gt;;  
  $html &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; $_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;];  
  $html &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;/pre&amp;gt;&amp;#39;&lt;/span&gt;;  
}
&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This code output the &lt;code&gt;name&lt;/code&gt; parameter without any filter so it&amp;rsquo;s very vulnerable to XSS!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exploit Exercices, Nebula - level00</title>
      <link>https://10degres.net/exploit-exercices-nebula-level00/</link>
      <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/exploit-exercices-nebula-level00/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://exploit-exercises.com/nebula/&#34; title=&#34;Exploit Exercises, Nebula&#34;&gt;Nebula&lt;/a&gt; is part of Exploit Exercises,
it covers a variety of simple and intermediate challenges that cover Linux privilege escalation, common scripting language issues, and file system race conditions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This level requires you to find a Set User ID program that will run as the “flag00” account.
You could also find this by carefully looking in top level directories in / for suspicious looking directories.
Alternatively, look at the find man page.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this first level, you have to find a file owned by &lt;code&gt;flag00&lt;/code&gt; with suid bit.
A single command can do the trick:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;find / -user flag00 -perm /6000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Exploit Exercices, Nebula - level01</title>
      <link>https://10degres.net/exploit-exercices-nebula-level01/</link>
      <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/exploit-exercices-nebula-level01/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?
Files for this level can be found in /home/flag01.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;sys types.h=&amp;#34;&amp;#34;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; argc, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;argv, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;envp)
{
  gid_t gid;
  uid_t uid;

  gid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getegid();
  uid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; geteuid();

  setresgid(gid, gid, gid);
  setresuid(uid, uid, uid);

  system(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/env echo and now what?&amp;#34;&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This program has been compiled and the executable is available in &lt;code&gt;/home/flag01&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exploit Exercices, Nebula - level02</title>
      <link>https://10degres.net/exploit-exercices-nebula-level02/</link>
      <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/exploit-exercices-nebula-level02/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?
Files for this level can be found in /home/flag02.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;sys/types.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; argc, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;argv, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;envp)
{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;buffer;
  
  gid_t gid;
  uid_t uid;
  
  gid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getegid();
  uid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; geteuid();
  
  setresgid(gid, gid, gid);
  setresuid(uid, uid, uid);
  
  buffer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NULL;
  
  asprintf(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;buffer, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/echo %s is cool&amp;#34;&lt;/span&gt;, getenv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USER&amp;#34;&lt;/span&gt;));
  printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;about to call system(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, buffer);
  
  system(buffer);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As the previous level, we here have a suid executable, owned by our target &lt;code&gt;flag02&lt;/code&gt;, who uses an environment variable &lt;code&gt;USER&lt;/code&gt; to print a super cool message.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vulnerable by Design</title>
      <link>https://10degres.net/vulnerable-by-design/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/vulnerable-by-design/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.vulnhub.com/&#34; title=&#34;VulnHub&#34;&gt;VulnHub&lt;/a&gt; is a training platform which provides &amp;ldquo;&lt;em&gt;a catalogue of &amp;lsquo;stuff&amp;rsquo; that is (legally) &amp;lsquo;breakable,
hackable &amp;amp; exploitable&amp;rsquo;&lt;/em&gt;&amp;rdquo;, understand: a pool of vulnerable virtual machines.
The downloads are essentially &lt;code&gt;.iso&lt;/code&gt;, &lt;code&gt;.vbox&lt;/code&gt; or &lt;code&gt;.ova&lt;/code&gt; which can be opened with VirtualBox or VMware.&lt;/p&gt;
&lt;p&gt;The machines are created and proposed by the community itself.
Also different versions of the famous Damn Vulnerable Linux and the &lt;a href=&#34;https://exploit-exercises.com/&#34; title=&#34;Exploit Exercises&#34;&gt;Exploit Exercises suite&lt;/a&gt; are in.
You will have to deal with many many different kinds of vulnerabilities like file permissions, web application, shellcode, heap overflows, password cracking, privilege escalation and so on&amp;hellip;&lt;/p&gt;
&lt;p&gt;For instance, you can read the solution of one of those challenge on InfoSec Institute website:
&lt;a href=&#34;http://resources.infosecinstitute.com/troll-challenge/&#34; title=&#34;Tr0ll challenge solution&#34;&gt;The Tr0ll Challenge&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Damn Vulnerable Web Application</title>
      <link>https://10degres.net/damn-vulnerable-web-application/</link>
      <pubDate>Wed, 10 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://10degres.net/damn-vulnerable-web-application/</guid>
      <description>&lt;p&gt;&lt;strong&gt;DVWA&lt;/strong&gt; is a PHP/MySQL web application that is intentionally vulnerable.
The goal is to learn common web vulnerabilities and improve your security skills by training yourself on your own server.
3 levels are available (low, medium and high) to perform those following attacks :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bruce Force&lt;/li&gt;
&lt;li&gt;Command Execution&lt;/li&gt;
&lt;li&gt;CSRF&lt;/li&gt;
&lt;li&gt;Captcha&lt;/li&gt;
&lt;li&gt;File Inclusion&lt;/li&gt;
&lt;li&gt;SQL Injection (plus Blind)&lt;/li&gt;
&lt;li&gt;File Upload&lt;/li&gt;
&lt;li&gt;XSS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The lowest level is usually pretty easy to bypass but the high level as a best practice presents the right way to protect your application.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
